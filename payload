/what
> X-Header: ok
CONTENT
Here we go!
again...?
CONTENT

/json/one
@true
{ "one": ["two", "three"] }

/json/multi
> Content-type: application/ULTRA_JSON
   {
"one": true,
"two": false
}

/json/*/*/three
{ "something": "else!" }

/what2/do/you
# Here we go
@ string.sub(uri, -3, -1) == 'you'
@ string.sub(uri, 1, 6) == '/what2'
@ print(method, body)
> hdr: one
>hdr: two
THIS
What is the deal
with cereal
and that


   cat, for real
THIS

/rng

# 50% change of tails! If this guard fails, we'll skip down to the next
# definition which will definitely match...

@math.random() < 0.5
> Content-type: text/html
HTML
<p>Tails!</p>
HTML

/rng
> Content-type: text/html
HTML
<p>Heads!</p>
HTML

/
> Content-Type: text/html
@ uri == '/'
HTML
<html>
  <head><title>OK, so this is may be taking things too far</title></head>
  <body>
    <ol>
      <li><a href="/what">/what</a>
      <li><a href="/what2/do/you">/what2/do/you</a>
      <li><a href="/json/one">/json/one</a>
      <li><a href="/json/multi">/json/multi</a>
      <li><a href="/rng">FLip a cOIn!</a>
    <ol>
  </body>
</html>
HTML

/poster
@ json
@ json.ok == 'yep'
@ json.first and #json.first > 1
{ "ok" : true }

/poster
@ json and json.ok == 'yep'
{ "ok" : "almost" }

/poster
{ "ok" : false }

/xyz
@ json and json['s p a c e s']
HTML
<html><body>HEY HEY HEY</body></html>
HTML

/header/test
@ SomeCustomHeader == 'OK'
{
  "result" : "ok"
}

/header/test
{
  "result" : "NOPE"
}

/end
> X-End-Header: whatever